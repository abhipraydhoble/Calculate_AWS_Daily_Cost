# Project : Student App

### GITHUB REPOSITORY LINK:
https://github.com/abhipraydhoble/Student-App-Project.git

###Prerequisite:
Ec2 instance
Java-1.8
Tomcat
Git
RDS

## LAUNCH EC2 INSTANCE
Allow Ports security group: 
22 = SSH
8080 = Tomcat
3306 = Mysql / Mariadb

Connect to instance:
java install-1.8
# yum install java-1.8* -y

Install Tomcat 
Search tomcat 8 download  on browser
$ wget  https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.99/bin/apache-tomcat-8.5.99.zip

$ unzip apache-tomcat-8.5.99.zip
$ cd  apache-tomcat-8.5.99.zip
$ cd bin
[catalina.sh  -->this file is neccessary to start tomcat]
$ chmod +x catalina.sh     [ give execute permission to file]

### Start and Stop Tomcat using this command:
$ sh catalina.sh start   [ tomcat started ]
$ sh catalina.sh stop

go to browser and public ip:8080

## SETUP STUDENT APPLICATION

$ yum install git -y
$ git clone https://github.com/abhipraydhoble/Student-App-Project.git 
$ cd Student-App-Project

 *** Copy file from git directory to Tomcat ***

# cp Student-App-Project/student.war apache-tomcat-8.5.93/webapps/
# cp Student-App-Project/mysql-connector.jar apache-tomcat-8.5.93/lib/

## SETUP DATABASE IN RDS:
Go to RDS
download mariadb-server using  below command

$ dnf install mariadb105-server
$ systemctl start mariadb
$ systemctl enable mariadb
$ systemctl status mariadb

### Log in into database

<Mariadb> Create database with name studentapp
<Mariadb> Create database studentapp;
<Mariadb> Use studentapp;   --> Switch to newly created database

### Run this query to create  table:

 CREATE TABLE if not exists students(student_id INT NOT NULL AUTO_INCREMENT,
	student_name VARCHAR(100) NOT NULL,
	student_addr VARCHAR(100) NOT NULL,
	student_age VARCHAR(3) NOT NULL,
	student_qual VARCHAR(20) NOT NULL,
	student_percent VARCHAR(10) NOT NULL,
	student_year_passed VARCHAR(10) NOT NULL,
	PRIMARY KEY (student_id)
);

Logout from database:
<Mariadb> exit

 ## MODIFY context.xml:

$ cd apache-tomcat-8.5.93/conf
$ vim context.xml
add below line [connection string] at line 21

<Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource"
               maxTotal="100" maxIdle="30" maxWaitMillis="10000"
               username="USERNAME" password="PASSWORD" driverClassName="com.mysql.jdbc.Driver"
               url="jdbc:mysql://DB-ENDPOINT:3306/DATABASE"/>


* Change 
1.Username
2.Password
3.DB-ENDPOINT 
4.DATABASE Name

Start tomcat
$ cd apache-tomcat-8.5.93/bin
$ ./catalina.sh start or  sh catalina.sh start

google hit
IP:8080/student


Requirement
Port: 8080 22 3306
application/command : git, unzip

******** this is for linux OS, for ubuntu OS command may be change

--------------------------------------------------------------------------------------

Tomcat server:
Tomcat: 8080
-> lauch ec2 instance
->alllow port 8080

->login into ec2
->java install-1.8
    $ yum install java-1.8* -y
->tomcat install 
    $ wget  https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.99/bin/apache-tomcat-8.5.99.zip
->unzip apache-tomcat-8.5.99.zip
->cd  apache-tomcat-8.5.99.zip
->cd bin
->[catalina.sh  -->this file is neccessary to start tomcat]
->chmod +x catalina.sh   
->sh catalina.sh start   |    sh catalina.sh stop
->tomcat started 
->go to browser and public ip:8080

download mysql/mariadb

login via root user
# mysql -u root 
** create user with password having root user like access **
mysql > CREATE USER 'admin'@'localhost' IDENTIFIED BY 'YourStrongPassword123!';
mysql > GRANT ALL PRIVILEGES ON *.* TO 'admin'@'localhost' WITH GRANT OPTION;
mysql > FLUSH PRIVILEGES;
mysql > exit;

**login with admin user**
# mysql -h localhost -u admin -pYourStrongPassword123!

**** create new database *****

mysql > create database <DATABASENAME>;              --- <DATABASENAME> = studentapp
****  create table under database  ****
mysql > use <DATABASENAME>;
mysql > CREATE TABLE if not exists students(student_id INT NOT NULL AUTO_INCREMENT,
	student_name VARCHAR(100) NOT NULL,
	student_addr VARCHAR(100) NOT NULL,
	student_age VARCHAR(3) NOT NULL,
	student_qual VARCHAR(20) NOT NULL,
	student_percent VARCHAR(10) NOT NULL,
	student_year_passed VARCHAR(10) NOT NULL,
	PRIMARY KEY (student_id)
);



------------------------------------------------------------------------------------
download java [1.8]
# yum install java-1.8*


----------------------------------------------------------------------------------
installation of tomcat

- download tomcat file 
	tomcat official site --> tomcat 8 --> zip file link copy --> on terminal download

# wget https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.93/bin/apache-tomcat-8.5.93.zip

*****   unnzip the file  *******

# unzip apache-tomcat-8.5.93.zip
# cd apache-tomcat-8.5.93

for tomcat start 
# cd bin

make sh file executable (permission)
# chmod +x *.sh

tomcat start stop command
# ./catalina.sh stop
# ./catalina.sh start

------------------------------------------------------------------------------------

setup student application

# yum install git -y
# cd 
# git clone https://github.com/abhipraydhoble/Student_App-Project.git 
# cd apache-tomcat-8.5.93/bin
# ./catalina.sh stop

*** Copy file from git directory to Tomcat ***

# cp StudentProject/student.war apache-tomcat-8.5.93/webapps/
# cp StudentProject/mysql-connector.jar apache-tomcat-8.5.93/lib/

**** modify context.xml

cd apache-tomcat-8.5.93/conf
vim context.xml
add below line at line 21

    <Resource
        name="jdbc/TestDB"
        auth="Container"
        type="javax.sql.DataSource"
        maxTotal="100"
        maxIdle="30"
        maxWaitMillis="10000"
        username="USERNAME"
        password="PASSWORD"
        driverClassName="com.mysql.jdbc.Driver"
        url="jdbc:mysql://DB-ENDPOINT:3306/studentapp"
    />


------
replace above with
USERNAME	-- MYSQL USERNAME  EX. admin
PASSWORD 	-- MYSQL PASSWORD  Ex. YourStrongPassword123!
DB-ENDPOINT 	-- localhost       --- In RDS, use RDS database endpoint

****   Start tomcat  *******
# cd apache-tomcat-8.5.93/bin
# ./catalina.sh start

------------------------------------------------------------------------------

google hit
localhost:8080/student
or 
IP:8080/student
